@using Students.DAL.Enum;
@model Students.MVC.Models.PaginationModel<Students.MVC.ViewModels.LessonViewModel>
@{
    ViewData["Title"] = $"Занятия";
    Layout = "_Layout";
}
<body>
    <form method="post" asp-controller="Lessons">
        <p>
            <select name="searchParameter" class="form-control">
                @foreach (var item in Html.GetEnumSelectList<EnumParametersLesson>())
                 {
                    @if (item.Value == Model.searchParameter.ToString())
                     {
                        <option selected="selected" value="@item.Value" name="searchParameter">@item.Text</option>
                     }
                    else
                    {
                    <option value="@item.Value" name="searchParameter">@item.Text</option>
                    }
                 }
            </select>
            <input type="text" name="searchString" size="40" value="@Model.searchString" />
            <input class="btn btn-primary"
                   type="submit" value="Поиск" />
        </p>
    </form>
    <table class="purpleHorizon">
        <thead>
            <tr>
                <th>
                    Курс
                </th>
                <th>
                    №
                </th>
                <th>
                    Названия урока
                </th>
                <th>
                    Домашния задания
                </th>
                <th>
                    Описания урока
                </th>

            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Data)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Course.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.NumberLesson)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Homework)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>

                    <td>
                        <a class="btn btn-primary"
                           asp-action="Edit" asp-route-id="@item.Id" asp-route-Url="@Context.Request.Path">Редактирование</a>
                        <a class="btn btn-primary"
                           asp-action="Details" asp-route-id="@item.Id" asp-route-Url="@Context.Request.Path">Подробнее</a>
                        <form method="post" asp-controller="Lessons" asp-action="Delete">
                            <button class="btn btn-danger" asp-controller="Lessons" asp-action="Delete" asp-route-LessonId="@item.Id">
                                Удалить
                            </button>
                        </form>
                    </td>
                </tr>

            }
            <tr>
                <td>
                    <a class="btn btn-primary" asp-action="CreateWithCourse" asp-route-Url="@Context.Request.Path">Добавить занятия</a>
                </td>
            </tr>
        </tbody>
    </table>
    <div class="content_detail__pagination cdp" actpage="@Model.PageNumber">
        <a href="#!-1" class="cdp_i" style="visibility:hidden">prev</a>
        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            <a href="/Lessons?searchString=@Model.searchString&searchParameter=@Model.searchParameter&page=@i" class="cdp_i" onclick="jQueryAjaxGet('@Url.Action("Index", "Students", null, Context.Request.Scheme)', '@i')">@i</a>
        }
        <a href="#!+1" class="cdp_i" style="visibility:hidden">next</a>
    </div>
</body>
